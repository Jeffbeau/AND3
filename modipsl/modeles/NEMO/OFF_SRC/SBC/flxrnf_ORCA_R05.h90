   !!----------------------------------------------------------------------
   !!                  *** flxrnf_ORCA_R05.h90  ***
   !!----------------------------------------------------------------------
   !!   flx_rnf      : update ocean runoffs for ORCA_R05 configuration
   !!----------------------------------------------------------------------
   !! * Modules used
   USE dom_oce         ! ocean space and time domain
   USE phycst          ! physical constants
   USE in_out_manager  ! I/O manager
   USE daymod          ! calendar

   IMPLICIT NONE
   PRIVATE

   !! * Routine accessibility
   PUBLIC flx_rnf         ! routine call by step.F90

   !! * Shared module variables
   REAL(wp), PUBLIC, DIMENSION(jpi,jpj) ::   &  !:
      runoff,            &  !: monthly runoff (kg/m2/s)
      upsadv,            &  !: mixed adv scheme in straits vicinity (hori.)
      upsrnfh               !: mixed adv scheme in runoffs vicinity (hori.)
   REAL(wp), PUBLIC, DIMENSION(jpk) ::   &  !:
      upsrnfz               !: mixed adv scheme in runoffs vicinity (vert.)
   INTEGER , PUBLIC ::   &  !:
      numrof  = 48 ,     &  !: logical unit for runoff data
      nrunoff =  0 ,     &  !: runoff option (namelist)
      nrnf1, nrnf2          !: first and second record used

   !! * Module variable
   REAL(wp), DIMENSION(jpi,jpj,2) ::   &  !:
      rnfdta                !: monthly runoff data array (kg/m2/s)

   !!----------------------------------------------------------------------
   !!   OPA 9.0 , LOCEAN-IPSL  (2005)
   !!   $Header: /home/opalod/NEMOCVSROOT/NEMO/OFF_SRC/SBC/flxrnf_ORCA_R05.h90,v 1.2 2005/11/16 16:14:39 opalod Exp $
   !!   This software is governed by the CeCILL licence see modipsl/doc/NEMO_CeCILL.txt
   !!----------------------------------------------------------------------

CONTAINS

   SUBROUTINE flx_rnf( kt )
      !!----------------------------------------------------------------------
      !!                  ***  ROUTINE flx_rnf  ***
      !!       
      !! ** Purpose :   Introduce a climatological run off forcing
      !!
      !! ** Method  :   ORCA R05 configuration
      !!      Initialze each mouth of river with a monthly climatology 
      !!      provided from different data.
      !!     C a u t i o n : upward water flux, runoff is negative
      !!                     set at the last loop of the routine
      !!
      !! ** Action :
      !!
      !! References : 
      !!       J. D. Milliman and R. H. Meade, 1983 : world-wide delivery
      !!          of river sediment to the oceans, journal of geology vol 91
      !!          pp 1-21.
      !!       G. L. Russell and J. R. Miller, 1990 : global river runoff
      !!          calculated from a global atmospheric general circulation
      !!          model, journal of hydrology, 117(1990), pp 241-254.
      !!       F. Van Der Leeden, Troise F. L., Todd D. K. : the water
      !!          encyclopedia, second edition, lewis publishers.
      !!       J. W. Weatherly, J. E. Walsh : The effects of precipitation
      !!          and river runoff in a coupled ice-ocean model of Arctic
      !!          Climate dynamics 1996 12:785,798
      !!       Jacobs et al. 1992. J. Glaciol. 38 (130) 375-387.
      !!
      !! History :
      !!        !  94-10  (G.Madec, M. Pontaud, M. Imbard)  Original code
      !!        !  97-03  (G.Madec)  time dependent version
      !!        !  98-06  (J.M. Molines)  exact computation of zxy 
      !!                         for months that are not 30 days
      !!        !  98-07  (M. Imbard)  ORCA and mpp option
      !!        !  99-08  (J.P. Boulanger H.L.Ayina)  New rivers and 
      !!                         values given in m3/s 
      !!        !  00-04  (G. Madec, K. Roberts) add antarctica ice discharge.
      !!        !  00-11  (R. Hordoir, E. Durand)  NetCDF FORMAT
      !!   8.5  !  02-09  (G. Madec)  F90: Free form and module
      !!----------------------------------------------------------------------
      !! * Modules used
      USE ioipsl

      !! * arguments
      INTEGER, INTENT( in  ) ::   kt ! ocean time step

#if defined key_coupled
      runoff(:,:) = 0.0e0
#else
      !!----------------------------------------------------------------------
      !!  ORCA_R05
      !!----------------------------------------------------------------------
      !! * Local declarations
      INTEGER, PARAMETER ::   &
         jpmois=12,   &  ! number of month in the year !
         jpriv=120,   &  ! maximum number of rivers
         jpcoef=20       ! maximum number of gridpoints for mouth rivers

      INTEGER  ::   ji, jj, jl, jm, jn, jr, jc
      INTEGER  ::   i15, imois, iman
      INTEGER  ::   inbp, idbd, idmeom
      INTEGER  ::   iirnf(jpcoef,jpriv),ijrnf(jpcoef,jpriv)
      INTEGER  ::   inb(jpriv)

      REAL(wp) ::   zconv, zxy
      REAL(wp) ::   zrup1,zrup2,zrup3
      REAL(wp) ::   zrnfm(jpmois, jpriv)
      REAL(wp) ::   zcoefr(jpi, jpj, 5)
      
      ! ====
      ! DATA
      ! ====

      ! I NORTH AMERICA
      ! ---------------

      ! 1-Saint Lawrence (Canada) 49N30 67W00               R2
      ! Old=447 km3/year=14165m3/s; CLIPPER=12430m3/s; ratio=1.14
      ! --> 13975.249m3/s
      DATA inb(1)/3/
      DATA (iirnf(jc,1),jc=1,jpcoef)/ 444, 444, 444, 17*0 /
      DATA (ijrnf(jc,1),jc=1,jpcoef)/ 367, 368, 369, 17*0 /
      DATA (zrnfm(jm,1),jm=1,jpmois)/   &
          11718.,  11971.,  12466.,  14980.,  19257.,  16913.,   &
          14211.,  13119.,  13367.,  13644.,  13463.,  12594./
      ! 2-Hudson River (USA) 41N00 77W00                    R1
      ! Old=12 km3/year=380m3/s; UNESCO(64-83,p255)=408m3/s
      ! --> 407.416687m3/s
      DATA inb(2)/1/
      DATA (iirnf(jc,2),jc=1,jpcoef)/ 426, 19*0 /
      DATA (ijrnf(jc,2),jc=1,jpcoef)/ 336, 19*0 /
      DATA (zrnfm(jm,2),jm=1,jpmois)/   &
          364.,    404.,    648.,    873.,    593.,    301.,   &
          205.,    171.,    205.,    290.,    379.,    456./
      ! 3-Missisipi and Atchafalaya (USA) 29N 90W           R1 
      ! Old=580 km3/year=18380m3/s; CLIPPER=17599m3/s
      ! --> 17599.334m3/s
      DATA inb(3)/2/
      DATA (iirnf(jc,3),jc=1,jpcoef)/ 397, 398, 18*0 /
      DATA (ijrnf(jc,3),jc=1,jpcoef)/ 312, 313, 18*0 /
      DATA (zrnfm(jm,3),jm=1,jpmois)/   &
          19260.,  20813.,  23026.,  28160.,  26510.,  19650.,   &
          14181.,  10676.,   9578.,  10167.,  11699.,  17472./
      ! 4-Brazos (USA) 29N58 95W53                          R1
      ! Old=7 km3/year=222m3/s; UNESCO(65-84, p298)=200m3/s
      ! --> 199.666656m3/s
      DATA inb(4)/1/
      DATA (iirnf(jc,4),jc=1,jpcoef)/ 386, 19*0 /
      DATA (ijrnf(jc,4),jc=1,jpcoef)/ 311, 19*0 /
      DATA (zrnfm(jm,4),jm=1,jpmois)/   &
          165.,    224.,    200.,    266.,    457.,    327.,   &
          143.,     69.,    102.,    132.,    160.,    151./
      ! 5-Colorado (Mexico) 31N54 114W57                    R5
      ! Old=20 km3/year=634m3/s
      ! --> 634.m3/s
      DATA inb(5)/2/
      DATA (iirnf(jc,5),jc=1,jpcoef)/ 347, 348, 18*0 /
      DATA (ijrnf(jc,5),jc=1,jpcoef)/ 316, 316, 18*0 /
      DATA (zrnfm(jm,5),jm=1,jpmois)/12*634./ 
      ! 6-Columbia (USA) 45N60 121W17                       R1
      ! Old=251 km3/year=7954m3/s; UNESCO(65-84, p312)=5368m3/s
      ! --> 5368.41602m3/s
      DATA inb(6)/2/
      DATA (iirnf(jc,6),jc=1,jpcoef)/ 326, 326, 18*0 /
      DATA (ijrnf(jc,6),jc=1,jpcoef)/ 360, 361, 18*0 /
      DATA (zrnfm(jm,6),jm=1,jpmois)/   &
          4752.,    5077.,    5633.,    6075.,    8422.,    9822.,   &
          6350.,    4112.,    3273.,    3251.,    3548.,    4106./ 
      ! 7-Fraser (USA)                                      R5
      ! Old=112 km3/year=3550m3/s;not found in UNESCO
      ! --> 3549.99976m3/s
      DATA inb(7)/2/
      DATA (iirnf(jc,7),jc=1,jpcoef)/ 317, 317, 18*0 /
      DATA (ijrnf(jc,7),jc=1,jpcoef)/ 378, 379, 18*0 /
      DATA (zrnfm(jm,7),jm=1,jpmois)/12*3550./ 
      ! 8-Yukon (USA) 63N00 165W00                          R3
      ! Old=195 km3/year=6179m3/s; UNESCO(65-77+80-84, p321)=4245; ratio=1.46
      ! --> 6017.24951m3/s
      DATA inb(8)/2/
      DATA (iirnf(jc,8),jc=1,jpcoef)/ 244, 244, 18*0 /
      DATA (ijrnf(jc,8),jc=1,jpcoef)/ 413, 414, 18*0 /
      DATA (zrnfm(jm,8),jm=1,jpmois)/   &
           1459.,    1213.,    1065.,    1100.,    9067.,   17675.,   &
          10680.,   11271.,    8658.,    5453.,    2649.,    1917./ 
      ! 9-Copper (USA) 61N47 144W45                         R2
      ! Old=39 km3/year=1236m3/s; UNESCO(65-84, p317)=1052m3/s; ratio=1.18
      ! --> 1236.25m3/s
      DATA inb(9)/1/
      DATA (iirnf(jc,9),jc=1,jpcoef)/ 274, 19*0 /
      DATA (ijrnf(jc,9),jc=1,jpcoef)/ 409, 19*0 /
      DATA (zrnfm(jm,9),jm=1,jpmois)/   &
           219.,    195.,    181.,    214.,    904.,   2532.,   &
          4026.,   3627.,   1632.,    697.,    354.,    254./ 
      ! 10-Susitna (USA)                                    R5
      ! Old=40 km3/year=1268m3/s
      ! --> 1268.m3/s
      DATA inb(10)/2/
      DATA (iirnf(jc,10),jc=1,jpcoef)/ 263, 264, 18*0 /
      DATA (ijrnf(jc,10),jc=1,jpcoef)/ 405, 405, 18*0 /
      DATA (zrnfm(jm,10),jm=1,jpmois)/12*1268./ 
      ! 11-McKenzie (Canada) 70N00 135W00                   R3
      ! Old=306 km3/year=9697m3/s; UNESCO(67+72+7479+82-84, p168)=8343m3/s;
      ! ratio=1.16
      ! --> 9606.66797m3/s
      DATA inb(11)/3/
      DATA (iirnf(jc,11),jc=1,jpcoef)/ 272, 272, 272, 17*0 /
      DATA (ijrnf(jc,11),jc=1,jpcoef)/ 451, 452, 453, 17*0 /
      DATA (zrnfm(jm,11),jm=1,jpmois)/   &
           3644.,    3400.,    3258.,    3546.,   14188.,   21544.,   &
          18954.,   15487.,   11284.,   10169.,    5901.,    3905./
      ! 12-Kuksokwim (USA) 60N00 ~162W30                    R4
      ! UNESCO(65-84, p318)=1112m3/s (61N87 158E10, Crooked Creek, inland)
      ! --> 1111.99988m3/s
      DATA inb(12)/2/
      DATA (iirnf(jc,12),jc=1,jpcoef)/ 244, 245, 18*0 /
      DATA (ijrnf(jc,12),jc=1,jpcoef)/ 413, 414, 18*0 /
      DATA (zrnfm(jm,12),jm=1,jpmois)/   &
          335.,     308.,     295.,     407.,    2415.,    2027.,   &
          1917.,   2049.,    1585.,    1072.,     545.,     389./     

      DATA inb(13)/0/
      DATA inb(14)/0/
      DATA inb(15)/0/

      ! Total run-offs(I)=60974.2539m3/s

      ! II SOUTH AMERICA
      ! -----------------
      ! 16-Chira (Peru) 4s54 81w08                          R2
      ! Old=5 km3/year=158m3/s; UNESCO (65-68, p357)=80.9; ratio=1.95
      ! --> 158.000015m3/s
      DATA inb(16)/1/
      DATA (iirnf(jc,16),jc=1,jpcoef)/ 414, 19*0 /
      DATA (ijrnf(jc,16),jc=1,jpcoef)/ 244, 19*0 /
      DATA (zrnfm(jm,16),jm=1,jpmois)/   &
          70.,     105.,     564.,     582.,     230.,      94.,   &
          87.,      47.,      35.,      32.,      29.,      21./
      ! 17-Magdalena (Colombia) 11N06 74W51                 R2
      ! Old=237 km3/year=7510m3/s; UNESCO(71-73+76-79, p348)=6973m3/s;
      ! ratio=1.08
      ! --> 7451.58301m3/s
      DATA inb(17)/2/
      DATA (iirnf(jc,17),jc=1,jpcoef)/ 424, 424, 18*0 /
      DATA (ijrnf(jc,17),jc=1,jpcoef)/ 270, 271, 18*0 /
      DATA (zrnfm(jm,17),jm=1,jpmois)/   &
          6598.,    4441.,    4087.,    5445.,    7380.,    8067.,   &
          8509.,    7428.,    7631.,    9296.,   10588.,    9949./
      ! 18-Orinoco (Venezuela) 8N37 62W15!                  R1
      ! Old=1100 km3/year=34857m3/s; UNESCO(73-75, p364)=28736m3/s;
      ! HLA=26371m3/s
      ! Data from HLA: 8.1N - 63.3W   1925/89
      ! --> 26371.416
      DATA inb(18)/5/
      DATA (iirnf(jc,18),jc=1,jpcoef)/ 451, 451, 452, 452, 452, 15*0 /
      DATA (ijrnf(jc,18),jc=1,jpcoef)/ 271, 272, 271, 272, 272, 15*0 /
      DATA (zrnfm(jm,18),jm=1,jpmois)/   &
          10670.,    7513.,    6344.,    6887.,   13086.,   26699.,   &
          43938.,   59957.,   57435.,   39951.,   27410.,   16567./ 
      ! 19-Amazon (Brazil) 0S05 50W00                       R1
      ! Old=6300 km3/year=199634m3/s; CLIPPER=166192m3/s~UNESCO;
      ! HLA=184806m3/s
      ! UNESCO data are at Obidos which is far inland and therefore does not
      ! fully represent the actual discharge
      ! Data from HLA: 1.5N - 55.3W   1970/96
      ! --> 184845.484m3/s
      DATA inb(19)/14/
      DATA (iirnf(jc,19),jc=1,jpcoef)/ 475, 476, 476, 476, 476,  &
                                       477, 477, 477, 477, 477,  &
                                       478, 478, 478, 478, 6*0 /
      DATA (ijrnf(jc,19),jc=1,jpcoef)/ 254, 251, 252, 253, 254,  &
                                       250, 251, 252, 253, 254,  &
                                       250, 251, 252, 253, 6*0 /
      DATA (zrnfm(jm,19),jm=1,jpmois)/   &
          152233., 176415., 199941., 225565., 244016., 244861.,   &
          230711., 203128., 164531., 128486., 118214., 130045. /
      ! 20-Sao Francisco (Brazil) 10S30 36W24               R1
      ! Old=97 km3/year=3074m3/s; UNESCO(77-79, p338)=2645m3/s
      ! --> 2645.3335m3/s
      DATA inb(20)/1/
      DATA (iirnf(jc,20),jc=1,jpcoef)/ 498, 19*0 /
      DATA (ijrnf(jc,20),jc=1,jpcoef)/ 223, 19*0 /
      DATA (zrnfm(jm,20),jm=1,jpmois)/   &
          3244.,   4116.,   5139.,   4330.,   2323.,   1800.,     &
          1587.,   1511.,   1593.,   1740.,   2190.,   2171. /
      ! 21-Parana+Uruguay(Arg./Uru.) 34S12 58W18            R1 
      ! Old=470 km3/year=14893m3/s; UNESCO(p323/324)=22263m3/s
      ! --> 22203.168m3/s 
      DATA inb(21)/5/
      DATA (iirnf(jc,21),jc=1,jpcoef)/ 462, 462, 462, 462, 463, 15*0 /
      DATA (ijrnf(jc,21),jc=1,jpcoef)/ 172, 173, 174, 175, 175, 15*0 /
      DATA (zrnfm(jm,21),jm=1,jpmois)/   &
          24803.,   26836.,   24585.,   21358.,   20041.,   21689.,   &
          22647.,   20403.,   19627.,   21400.,   21126.,   21923./
      ! 22-Negro (Argentina)  41S02  62W47                  R2
      ! Old=30 km3/year=951m3/s; UNESCO(65-79,p330)=765m3/s; ratio=1.24
      ! --> 907.666687m3/s
      DATA inb(22)/2/
      DATA (iirnf(jc,22),jc=1,jpcoef)/ 446, 447, 18*0 /
      DATA (ijrnf(jc,22),jc=1,jpcoef)/ 160, 160, 18*0 /
      DATA (zrnfm(jm,22),jm=1,jpmois)/   &
          882.,     587.,     519.,     482.,     623.,     984.,   &
          1120.,   1294.,    1092.,    1166.,    1105.,    1038./
      ! 23- Tocantins :  ~48W00 ~0.5S                       R4
      ! UNESCO(76-77+80-81, p335)=12167m3/s (station far inland!)
      ! --> 12173.082m3/s
      DATA inb(23)/4/
      DATA (iirnf(jc,23),jc=1,jpcoef)/ 479, 480, 481, 482, 16*0 /
      DATA (ijrnf(jc,23),jc=1,jpcoef)/ 249, 249, 249, 249, 16*0 /
      DATA (zrnfm(jm,23),jm=1,jpmois)/   &
          15507.,  24855.,  27854.,  24257.,  15860.,   7861.,   &
          4440.,   3082.,   2728.,   3417.,   5511.,  10705. /

      DATA inb(24)/0/
      DATA inb(25)/0/

      ! Total run-offs(II)=256755.75
      ! Total run-offs(I+II)=317730

      ! III EUROPE
      ! ----------
      ! 26-Rhone (France) 43N20 4E50                        R1 
      ! Old=49 km3/year=1553m3/s; UNESCO(65-83, p512)=1229
      ! --> 1217.16663m3/s
      DATA inb(26)/1/
      DATA (iirnf(jc,26),jc=1,jpcoef)/ 584, 19*0 /
      DATA (ijrnf(jc,26),jc=1,jpcoef)/ 347, 19*0 /
      DATA (zrnfm(jm,26),jm=1,jpmois)/   &
          1385.,    1848.,    1568.,    1311.,    1420.,    1191.,   &
           937.,     796.,     794.,     962.,    1161.,    1233./
      ! 27-Po (Italy) 11N10 1W09                            R1 
      ! Old=46 km3/year=1458m3/s; UNESCO(65-84, p527)=1550m3/s
      ! --> 1550.08337m3/s
      DATA inb(27)/1/
      DATA (iirnf(jc,27),jc=1,jpcoef)/ 599, 19*0 /
      DATA (ijrnf(jc,27),jc=1,jpcoef)/ 355, 19*0 /
      DATA (zrnfm(jm,27),jm=1,jpmois)/   &
          1304.,    1605.,    1856.,    1549.,    1958.,    1760.,   &
          1040.,    1007.,    1615.,    1907.,    1772.,    1228./
      ! 28-Danube (Roumania) 45N20 29E40                    R1 
      ! Old=206 km3/year=6527m3/s; UNESCO(65-84, p544)=7011m3/s
      ! --> 7011.8335m3/s
      DATA inb(28)/2/
      DATA (iirnf(jc,28),jc=1,jpcoef)/ 632, 632, 18*0 /
      DATA (ijrnf(jc,28),jc=1,jpcoef)/ 356, 357, 18*0 /
      DATA (zrnfm(jm,28),jm=1,jpmois)/   &
          6625.,    7352.,    7986.,    9279.,    9482.,    8618.,   &
          7586.,    6001.,    5210.,    4989.,    4921.,    6093./

      DATA inb(29)/0/
      DATA inb(30)/0/

      ! Total run-offs(III)=9779.08301m3/s
      ! Total run-offs(I+II+III)=327509.094m3/s
      
      ! IV EURASIAN ARCTIC
      ! ------------------
      ! 31-Iana (Russia)                                    R1
      ! Old=29 km3/year=919m3/s; UNESCO(65-72+74+76-84, p463)=936m3/s
      ! --> 0m3/s
      DATA inb(31)/0/
      DATA (iirnf(jc,31),jc=1,jpcoef)/ 20*0 /
      DATA (ijrnf(jc,31),jc=1,jpcoef)/ 20*0 /
      DATA (zrnfm(jm,31),jm=1,jpmois)/   &
             2.,       1.,       0.,       0.,     917.,    3514.,   &
          2968.,    2329.,    1322.,     178.,      36.,       8./ 
      ! 32-Ob (Russia) 66N45 69E30                          R1 
      ! Old=385 km3/year=12200m3/s; UNESCO(65-84, p478)=12862m3/s
      ! --> 12861.5m3/s
      DATA inb(32)/8/
      DATA (iirnf(jc,32),jc=1,jpcoef)/ 635, 635, 636, 636, 636,637, 637,637,12*0 /
      DATA (ijrnf(jc,32),jc=1,jpcoef)/ 508, 509, 509, 508, 507,509, 508,507,12*0 /
      DATA (zrnfm(jm,32),jm=1,jpmois)/   &
           4977.,    4150.,    3611.,    3590.,   14723.,   33366.,   &
          30773.,   22785.,   14701.,    9705.,    6078.,    5879./
      ! 33-Yenesei (Russia) 71N50 82E40                     R1 
      ! Old=560 km3/year=17745m3/s; UNESCO(65-84, p472)=17462m3/s
      ! --> 17461.666m3/s
      DATA inb(33)/9/
      DATA (iirnf(jc,33),jc=1,jpcoef)/ 114,115,115,116, 117,117,117,118,118,11*0 /
      DATA (ijrnf(jc,33),jc=1,jpcoef)/ 504,504,503,503, 501,502,503,502,501,11*0 /
      DATA (zrnfm(jm,33),jm=1,jpmois)/   &
           6659.,    7007.,    6895.,    7089.,   24183.,   74965.,   &
          25325.,   15940.,   16050.,   12678.,    6741.,    6008./
      ! 34-Severnaya Dvina(Russia)64N32 40E30               R5 
      ! Old=106 km3/year=3359m3/s; not in UNESCO data base
      ! --> 3359.00024m3/s
      DATA inb(34)/2/
      DATA (iirnf(jc,34),jc=1,jpcoef)/ 620, 620, 18*0 /
      DATA (ijrnf(jc,34),jc=1,jpcoef)/ 448, 449, 18*0 /
      DATA (zrnfm(jm,34),jm=1,jpmois)/12*3359./
      ! 35-Lena (Russia) 72N25 126E40                       R1 
      ! --> 16192.333m3/s
      DATA inb(35)/9/
      DATA (iirnf(jc,35),jc=1,jpcoef)/ 142,143,148,148,149,149,150,150,150,11*0 /
      DATA (ijrnf(jc,35),jc=1,jpcoef)/ 458,458,456,448,449,448,451,450,449,11*0 /
      DATA (zrnfm(jm,35),jm=1,jpmois)/   &
           2663.,    2095.,    1629.,    1324.,    7203.,   64230.,   &
          40810.,   28310.,   25995.,   13299.,    3673.,    3077./
      ! 36-Kolyma (Russia) 69N30 161E00                     R1
      ! Old=71 km3/year=2250m3/s; UNESCO(65-84)=2138m3/s
      ! --> 2138.66675m3/s
      DATA inb(36)/2/
      DATA (iirnf(jc,36),jc=1,jpcoef)/ 184, 185, 18*0 /
      DATA (ijrnf(jc,36),jc=1,jpcoef)/ 429, 429, 18*0 /
      DATA (zrnfm(jm,36),jm=1,jpmois)/   &
           131.,      92.,      76.,      65.,    2576.,    9143.,   &
          4670.,    3727.,    3226.,    1119.,     630.,     209./
      ! 37-Indigirka (russia) 70N48 148E54                  R1 
      ! Old=55 km3/year=1743m3/s; UNESCO(65-68+70+72-84)=1622.
      ! --> 1622.00012m3/s
      DATA inb(37)/1/
      DATA (iirnf(jc,37),jc=1,jpcoef)/ 172, 19*0 /
      DATA (ijrnf(jc,37),jc=1,jpcoef)/ 438, 19*0 /
      DATA (zrnfm(jm,37),jm=1,jpmois)/   &
            32.,      17.,      11.,       7.,     354.,    5629.,   &
          5210.,    4617.,    2823.,     559.,     142.,      63./

      DATA inb(38)/0/
      DATA inb(39)/0/
      DATA inb(40)/0/

      ! Total run-offs(IV)=40773.6641m3/s
      ! Total run-offs(I+II+III+IV)=368282.75m3/s

      ! V ASIA
      ! ------
      ! 41-Amur (Russia) 52N56 141E10                       R2
      ! Old=325 km3/year=10299m3/s; UNESCO(65-84, p451)=8792m3/s; ratio=1.17
      ! --> 10299.332m3/s
      DATA inb(41)/2/
      DATA (iirnf(jc,41),jc=1,jpcoef)/ 141, 141, 18*0 /
      DATA (ijrnf(jc,41),jc=1,jpcoef)/ 381, 382, 18*0 /
      DATA (zrnfm(jm,41),jm=1,jpmois)/   &
           2108.,    1543.,    1252.,    4088.,   15464.,   17336.,   &
          16100.,   20801.,   21548.,   15658.,    5188.,    2506./
      ! 42-Liaohe (China) 40N40 122E09                      R5
      ! Old=6 km3/year=190m3/s; not found in UNESCO data base
      ! --> 189.999985m3/s
      DATA inb(42)/1/
      DATA (iirnf(jc,42),jc=1,jpcoef)/ 100, 19*0 /
      DATA (ijrnf(jc,42),jc=1,jpcoef)/ 342, 19*0 /
      DATA (zrnfm(jm,42),jm=1,jpmois)/12*190./
      ! 43-Daling (China) 40N56 121E43                      R5
      ! Old=1 km3/year=32m3/s; not found in UNESCO data base
      ! --> 31.9999962m3/s
      DATA inb(43)/2/
      DATA (iirnf(jc,43),jc=1,jpcoef)/  99, 100, 18*0 /
      DATA (ijrnf(jc,43),jc=1,jpcoef)/ 342, 342, 18*0 /
      DATA (zrnfm(jm,43),jm=1,jpmois)/12*32./
      ! 44-Haiho (China) 6N17   1E23
      ! Old=2 km3/year=64m3/s; not found in UNESCO data base
      ! --> 63.9999924m3/s
      DATA inb(44)/1/
      DATA (iirnf(jc,44),jc=1,jpcoef)/ 121, 19*0 /
      DATA (ijrnf(jc,44),jc=1,jpcoef)/ 348, 19*0 /
      DATA (zrnfm(jm,44),jm=1,jpmois)/12*64./
      ! 45-Yellow/Huangho (China) 37N32 118E19              R2 
      ! Old=49 km3/year=1553m3/s; UNESCO(p371)=1210m3/s; ratio=1.28
      ! --> 1552.5m3/s
      DATA inb(45)/3/
      DATA (iirnf(jc,45),jc=1,jpcoef)/  92,  92,  92, 17*0 /
      DATA (ijrnf(jc,45),jc=1,jpcoef)/ 336, 337, 338, 17*0 /
      DATA (zrnfm(jm,45),jm=1,jpmois)/   &
           697.,     674.,    1282.,    1206.,    1109.,     778.,   &
          1964.,    3270.,    3668.,    2133.,     978.,     871./
      ! 46-Yangtze (China) 31N48 121E10=Changjiang          R2
      ! Old=900 km3/year=28520m3/s; UNESCO(p372)=25032m3/s; ratio=1.14
      ! --> 28519.584m3/s
      DATA inb(46)/2/
      DATA (iirnf(jc,46),jc=1,jpcoef)/ 100, 100, 18*0 /
      DATA (ijrnf(jc,46),jc=1,jpcoef)/ 316, 317, 18*0 /
      DATA (zrnfm(jm,46),jm=1,jpmois)/   &
          10994.,   10548.,   13254.,   24097.,   36972.,   47197.,   &
          53891.,   42070.,   37627.,   30762.,   22046.,   12777./
      ! 47-Pearl/Zhujiang (China) 23N36 106E34=Xijiang      R2 
      ! Old=302 km3/year=9570m3/s; UNESCO(76,82, p373)=6987m3/s; ratio=1.37
      ! --> 9570.75m3/s
      DATA inb(47)/2/
      DATA (iirnf(jc,47),jc=1,jpcoef)/  72,  73, 18*0 /
      DATA (ijrnf(jc,47),jc=1,jpcoef)/ 294, 294, 18*0 /
      DATA (zrnfm(jm,47),jm=1,jpmois)/   &
           2357.,    2415.,    2634.,    6446.,   14246.,   18395.,   &
          19213.,   17558.,   12312.,    7255.,    5864.,    6154./
      ! 48-Red/Hungho (Vietnam) 20N17 106E34                R5 
      ! Old=123 km3/year=3897m3/s; not in UNESCO data base
      ! --> 3897.m3/s
      DATA inb(48)/3/
      DATA (iirnf(jc,48),jc=1,jpcoef)/  68,  68,  68, 17*0 /
      DATA (ijrnf(jc,48),jc=1,jpcoef)/ 288, 289, 290, 17*0 /
      DATA (zrnfm(jm,48),jm=1,jpmois)/12*3897./
      ! 49-Mekong (Vietnam) 10N33 105E24                    R5
      ! Old=470 km3/year=14893m3/s; not in UNESCO data base
      ! --> 14893.0029m3/s
      DATA inb(49)/3/
      DATA (iirnf(jc,49),jc=1,jpcoef)/  69,  69,  70, 17*0 /
      DATA (ijrnf(jc,49),jc=1,jpcoef)/ 269, 270, 270, 17*0 /
      DATA (zrnfm(jm,49),jm=1,jpmois)/12*14893./
      ! 50-Irrawady (Burma) 15N50  95E06                    R5
      ! Old=428 km3/year=13563m3/s; not in UNESCO data base
      ! --> 13563.m3/s
      DATA inb(50)/2/
      DATA (iirnf(jc,50),jc=1,jpcoef)/  44,  45, 18*0 /
      DATA (ijrnf(jc,50),jc=1,jpcoef)/ 283, 282, 18*0 /
      DATA (zrnfm(jm,50),jm=1,jpmois)/12*13563./
      ! 51-Ganges+Brahmaputra (Beng.) 22N00  91E00          R1
      ! Old=971 km3/year=30769m3/s; UNESCO(69-70+73-75, p367)=31760m3/s
      ! --> 32147.498m3/s
      DATA inb(51)/4/
      DATA (iirnf(jc,51),jc=1,jpcoef)/  36,  37,  38,  39, 16*0 /
      DATA (ijrnf(jc,51),jc=1,jpcoef)/ 295, 295, 295, 295, 16*0 /
      DATA (zrnfm(jm,51),jm=1,jpmois)/   &
           6623.,    6315.,    6432.,    9410.,   17263.,   38302.,   &
          64688.,   80338.,   84802.,   43387.,   17888.,   10322./
      ! 52-Mehandi (India)                                  R5
      ! Old=67 km3/year=2123m3/s; not in UNESCO data base
      ! --> 0m3/s
      DATA inb(52)/0/
      DATA (iirnf(jc,52),jc=1,jpcoef)/ 20*0 /
      DATA (ijrnf(jc,52),jc=1,jpcoef)/ 20*0 /
      DATA (zrnfm(jm,52),jm=1,jpmois)/12*2123./
      ! 53-Damodar (India)                                  R2
      ! Old=10 km3/year=320m3/s; UNESCO(p386)=173m3/s; ratio=1.85
      ! --> 432.916656m3/s
      DATA inb(53)/1/
      DATA (iirnf(jc,53),jc=1,jpcoef)/  30, 19*0 /
      DATA (ijrnf(jc,53),jc=1,jpcoef)/ 294, 19*0 /
      DATA (zrnfm(jm,53),jm=1,jpmois)/   &
           51.,      37.,      42.,      49.,      85.,     296.,   &
          896.,    1390.,    1591.,     542.,     172.,      44./   
      ! 54-Godavari (India) 17N00  81E45                    R2
      ! Old=84 km3/year=2662m3/s; UNESCO(p379)=1916m3/s; ratio=1.39
      ! --> 3670.5m3/s
      DATA inb(54)/1/
      DATA (iirnf(jc,54),jc=1,jpcoef)/  19, 19*0 /
      DATA (ijrnf(jc,54),jc=1,jpcoef)/ 283, 19*0 /
      DATA (zrnfm(jm,54),jm=1,jpmois)/   &
           988.,     737.,     280.,     219.,     196.,    1691.,   &
          8063.,   14571.,   11428.,    3953.,    1221.,     699./   
      ! 55-Indus (Pakistan) 24N20  67E47             R2
      ! Old=238 km3/year=7542m3/s; UNESCO (76-79, p428)=2396m3/s; ratio=3.15
      ! --> 7562.m3/s
      DATA inb(55)/4/
      DATA (iirnf(jc,55),jc=1,jpcoef)/ 711, 711, 712, 713, 16*0 /
      DATA (ijrnf(jc,55),jc=1,jpcoef)/ 297, 298, 297, 297, 16*0 /
      DATA (zrnfm(jm,55),jm=1,jpmois)/   &
            988.,     737.,    1904.,    1968.,    3625.,    6143.,   &
          15969.,    36656.,  17173.,    3215.,    1251.,    1115./   
      ! 56-Tigris and Euphrates (Iraq) 31N00  47E25         R1
      ! Old=46 km3/year=1458m3/s; UNESCO(76-79, p428)=2396m3/s
      ! --> 2248.8335m3/s
      DATA inb(56)/3/
      DATA (iirnf(jc,56),jc=1,jpcoef)/ 673, 673, 674, 17*0 /
      DATA (ijrnf(jc,56),jc=1,jpcoef)/ 312, 313, 313, 17*0 /
      DATA (zrnfm(jm,56),jm=1,jpmois)/   &
          1872.,    2127.,    2962.,    4944.,    5036.,    3078.,   &
          1362.,     900.,     786.,     993.,    1184.,    1742./   

      DATA inb(57)/0/
      DATA inb(58)/0/
      DATA inb(59)/0/
      DATA inb(60)/0/

      ! Total run-offs (V)=128642.922m3/s
      ! Total run-offs (I+II+III+IV+V)=496925.688m3/s

      ! VI AFRICA
      ! ----------
      ! 61-Nile (Egypt) 30N10  31E06                        R1
      ! Old=30 km3/year=951m3/s; UNESCO(73-84)=1251m3/s
      ! --> 1251.33337m3/s
      DATA inb(61)/3/
      DATA (iirnf(jc,61),jc=1,jpcoef)/ 636, 636, 637, 17*0 /
      DATA (ijrnf(jc,61),jc=1,jpcoef)/ 317, 318, 318, 17*0 /
      DATA (zrnfm(jm,61),jm=1,jpmois)/   &
          1239.,    1035.,    1126.,    1110.,    1170.,    1542.,   &
          1742.,    1559.,    1191.,    1103.,    1075.,    1124./   
      ! 62-Niger (Nigeria) 5N33   6E33                      R1
      ! Old=192 km3/year=6084m3/s; HLA=5545m3/s;
      ! Data from HLA: 4.5N -  6  E   1950/87
      ! --> 5545.08301m3/s
      DATA inb(62)/3/
      DATA (iirnf(jc,62),jc=1,jpcoef)/ 591, 592, 593, 17*0 /
      DATA (ijrnf(jc,62),jc=1,jpcoef)/ 258, 258, 258, 17*0 /
      DATA (zrnfm(jm,62),jm=1,jpmois)/   &
          2029.,    1804.,    1573.,    1418.,    1494.,    2561.,   &
          5272.,    9629.,   14951.,   16227.,    6842.,    2741./   
      ! 63-Zaire/Congo (Congo) 6S04  12E24                  R1      
      ! Old=1250 km3/year=39610m3/s; UNESCO(65-83, p149)=41941m3/s; HLA
      ! =39720m3/s
      ! Data from HLA: 6S - 12  E   1902/96
      ! --> 39719.5m3/s
      DATA inb(63)/4/
      DATA (iirnf(jc,63),jc=1,jpcoef)/ 599, 599, 600, 600, 16*0 /
      DATA (ijrnf(jc,63),jc=1,jpcoef)/ 237, 238, 236, 237, 16*0 /
      DATA (zrnfm(jm,63),jm=1,jpmois)/   &
          47200.,   37692.,   34374.,   36603.,   37862.,   35588.,   &
          30966.,   30774.,   35981.,   42825.,   51455.,   55314./  
      ! 64-Orange (Sth Africa) 28S41 16E28                  R5
      ! Old=11 km3/year=349m3/s
      ! --> 349.000031m3/s
      DATA inb(64)/2/
      DATA (iirnf(jc,64),jc=1,jpcoef)/ 609, 609, 18*0 /
      DATA (ijrnf(jc,64),jc=1,jpcoef)/ 188, 189, 18*0 /
      DATA (zrnfm(jm,64),jm=1,jpmois)/12*349./
      ! 65-Zambesi (Mozambique) 18S55 36E04                 R5
      ! Old=223 km3/year=7066m3/s
      ! --> 7066.00049m3/s
      DATA inb(65)/3/
      DATA (iirnf(jc,65),jc=1,jpcoef)/ 646, 646, 646, 17*0 /
      DATA (ijrnf(jc,65),jc=1,jpcoef)/ 207, 208, 209, 17*0 /
      DATA (zrnfm(jm,65),jm=1,jpmois)/12*7066./
      ! 66-Limpopo (mozambique) 25S15 33E30                 R5
      ! Old=5 km3/year=158m3/s
      ! --> 158.m3/s
      DATA inb(66)/2/
      DATA (iirnf(jc,66),jc=1,jpcoef)/ 642, 642, 18*0 /
      DATA (ijrnf(jc,66),jc=1,jpcoef)/ 196, 197, 18*0 /
      DATA (zrnfm(jm,66),jm=1,jpmois)/12*158./
      ! 67-Rufiji (tanzania) 8S00 39E20                     R5
      ! Old=9 km3/year=285m3/s
      ! --> 285.m3/s
      DATA inb(67)/1/
      DATA (iirnf(jc,67),jc=1,jpcoef)/ 655, 19*0 /
      DATA (ijrnf(jc,67),jc=1,jpcoef)/ 235, 19*0 /
      DATA (zrnfm(jm,67),jm=1,jpmois)/12*285./
      ! Other rivers from the Gulf of Guinea
      ! 68-Kouilou (Congo)  4.5S-11.5E (UNESCO=p51)         R1
      ! Data from HLA:  4S - 11  E   1953/86 = 919m3/s
      ! --> 924.25m3/s
      DATA inb(68)/1/
      DATA (iirnf(jc,68),jc=1,jpcoef)/ 599, 19*0 /
      DATA (ijrnf(jc,68),jc=1,jpcoef)/ 241, 19*0 /
      DATA (zrnfm(jm,68),jm=1,jpmois)/   &
          1115.,    1166.,    1285.,    1462.,    1454.,     725.,   &
           480.,     378.,     327.,     400.,    1018.,    1281./
      ! 69-Nyanga (Gabon)  3S-10E (UNESCO=p66)              R1
      ! Data from HLA: 2.8N - 10  E   1952/82 = 264m3/s
      ! --> 264.166687m3/s
      DATA inb(69)/1/
      DATA (iirnf(jc,69),jc=1,jpcoef)/ 595, 19*0 /
      DATA (ijrnf(jc,69),jc=1,jpcoef)/ 244, 19*0 /
      DATA (zrnfm(jm,69),jm=1,jpmois)/   &
          126.,      99.,     143.,     253.,     316.,     300.,   &
          156.,      93.,     231.,     557.,     592.,     304./
      ! 70-Ogoue (Gabon) 1S-9E (UNESCO, p69)                R1
      ! Data from HLA: .75S -  9  E   1930/90 = 4512m3/s
      ! --> 4511.83301m3/s
      DATA inb(70)/2/
      DATA (iirnf(jc,70),jc=1,jpcoef)/ 593, 593, 18*0 /
      DATA (ijrnf(jc,70),jc=1,jpcoef)/ 247, 248, 18*0 /
      DATA (zrnfm(jm,70),jm=1,jpmois)/   &
          4514.,    3988.,    4622.,    5403.,    5790.,    4145.,   &
          2616.,    1961.,    2119.,    4304.,    7870.,    6810./
      ! 71-Sanaga (Cameroun) 3.5N-9.5E (UNESCO, p31)        R1
      ! Data from HLA: 3.9N -  9.6E   1944/80 = 1983m3/s
      ! --> 1982.58337m3/s
      DATA inb(71)/2/
      DATA (iirnf(jc,71),jc=1,jpcoef)/ 595, 595, 18*0 /
      DATA (ijrnf(jc,71),jc=1,jpcoef)/ 255, 256, 18*0 /
      DATA (zrnfm(jm,71),jm=1,jpmois)/   &
           813.,     578.,     517.,     633.,     909.,    1278.,   &
          1928.,    2653.,    4361.,    5470.,    3307.,    1344./
      ! 72-Nyong (Cameroun) 3.1N-9.5E (UNESCO, p36)         R1
      ! Data from HLA: 3.5N -  9.8E   1951/84 = 432m3/s
      ! --> 431.166656m3/s      
      DATA inb(72)/1/
      DATA (iirnf(jc,72),jc=1,jpcoef)/ 594, 19*0 /
      DATA (ijrnf(jc,72),jc=1,jpcoef)/ 257, 19*0 /
      DATA (zrnfm(jm,72),jm=1,jpmois)/   &
          232.,     128.,     150.,     266.,     402.,     459.,   &
          353.,     306.,     604.,     930.,     878.,     466./
      ! 73-Ntem (Cameroun) 2.5N-9.5E (UNESCO, p36)          R1
      ! Data from HLA: 3N -  9.8E   1951/87 = 330m3/s      
      ! --> 329.75m3/s
      DATA inb(73)/1/
      DATA (iirnf(jc,73),jc=1,jpcoef)/ 594, 19*0 /
      DATA (ijrnf(jc,73),jc=1,jpcoef)/ 254, 19*0 /
      DATA (zrnfm(jm,73),jm=1,jpmois)/   &
          452.,     455.,     492.,     466.,     482.,     251.,   &
          151.,     108.,      87.,     133.,     395.,     485./
      ! 74-Wouri (Cameroun) 4N-9.5E (UNESCO, p34)           R1
      ! Data from HLA: 4N -  9.5E   1951/84  = 307m3/s
      ! --> 306.583374m3/s
      DATA inb(74)/1/
      DATA (iirnf(jc,74),jc=1,jpcoef)/ 594, 19*0 /
      DATA (ijrnf(jc,74),jc=1,jpcoef)/ 258, 19*0 /
      DATA (zrnfm(jm,74),jm=1,jpmois)/   &
           88.,      63.,      68.,      95.,     139.,     222.,   &
          395.,     633.,     825.,     675.,     328.,     148./
      ! 75-Oueme (Benin) 6.5N-2.5E (UNESCO, p27)            R1
      ! Data from HLA:  6.2N -  2.5E   1951/84 =113m3/s
      ! --> 112.666664m3/s
      DATA inb(75)/1/
      DATA (iirnf(jc,75),jc=1,jpcoef)/ 583, 19*0 /
      DATA (ijrnf(jc,75),jc=1,jpcoef)/ 262, 19*0 /
      DATA (zrnfm(jm,75),jm=1,jpmois)/   &
           0.,       0.,       0.,       0.,       1.,      18.,   &
          96.,     324.,     531.,     319.,      58.,       5./
      ! 76-Mono(Tepetou,Benin/Togo) 6.25N-1.8E (U, p27)     R1
      ! Data from HLA: 6.2N -  1  E   1951/85  = 96m3/s       
      ! --> 96.4999924m3/s
      DATA inb(76)/2/
      DATA (iirnf(jc,76),jc=1,jpcoef)/ 578, 579, 18*0 /
      DATA (ijrnf(jc,76),jc=1,jpcoef)/ 262, 262, 18*0 /
      DATA (zrnfm(jm,76),jm=1,jpmois)/   &
            2.,       1.,       1.,       4.,       8.,      44.,   &
          168.,     274.,     386.,     215.,      47.,       8./
      ! 77-Comoe (Ivory Coast) 5N-4W (UNESCO, p56)          R1
      ! Data from HLA: 5.1N -  4  W   1955/86 = 194m3/s       
      ! --> 194.25m3/s
      DATA inb(77)/1/
      DATA (iirnf(jc,77),jc=1,jpcoef)/ 569, 19*0 /
      DATA (ijrnf(jc,77),jc=1,jpcoef)/ 260, 19*0 /
      DATA (zrnfm(jm,77),jm=1,jpmois)/   &
           14.,       7.,       9.,      17.,      29.,      90.,   &
          145.,     349.,     740.,     688.,     198.,      45./
      ! 78-Sassandra (Ivory Coast) 5N-6W (UNESCO, p58)      R1
      ! Data from HLA: 5N -  6  W   1953/86 = 449m3/s
      ! --> 449.333344m3/s
      DATA inb(78)/1/
      DATA (iirnf(jc,78),jc=1,jpcoef)/ 564, 19*0 /
      DATA (ijrnf(jc,78),jc=1,jpcoef)/ 260, 19*0 /
      DATA (zrnfm(jm,78),jm=1,jpmois)/   &
          144.,     116.,     119.,     143.,     156.,     334.,   &
          419.,     692.,    1277.,    1190.,     553.,     249./
      
      DATA inb(79)/0/
      DATA inb(80)/0/
      DATA inb(82)/0/
      DATA inb(83)/0/
      DATA inb(84)/0/
      DATA inb(85)/0/
      DATA inb(86)/0/
      DATA inb(87)/0/
      DATA inb(88)/0/
      DATA inb(89)/0/
      DATA inb(90)/0/

      ! Total run-offs (VI)=63977.m3/s
      ! Total run-offs (I+II+III+IV+V+VI)=560902.688m3/s

      ! VII OCEANIA
      ! ------------
      ! 91-Murray (Austrlia) 35S34 138E54                   R5
      ! Old=22 km3/year=697m3/s
      ! --> 696.999939m3/s
      DATA inb(91)/3/
      DATA (iirnf(jc,91),jc=1,jpcoef)/ 129, 130, 130, 17*0 /
      DATA (ijrnf(jc,91),jc=1,jpcoef)/ 177, 176, 177, 17*0 /
      DATA (zrnfm(jm,91),jm=1,jpmois)/12*697./
      ! 92-Haast (N. Zeland) 43S50 169E02                   R5
      ! Old=6 km3/year=190m3/s
      ! --> 189.999985m3/s
      DATA inb(92)/1/
      DATA (iirnf(jc,92),jc=1,jpcoef)/ 194, 19*0 /
      DATA (ijrnf(jc,92),jc=1,jpcoef)/ 153, 19*0 /
      DATA (zrnfm(jm,92),jm=1,jpmois)/12*190./
      ! 93-Fly (N. Guinea) 8S30 143E05                      R5
      ! Old=77 km3/year=2440m3/s
      ! --> 2440.m3/s
      DATA inb(93)/1/
      DATA (iirnf(jc,93),jc=1,jpcoef)/ 143, 19*0 /
      DATA (ijrnf(jc,93),jc=1,jpcoef)/ 233, 19*0 /
      DATA (zrnfm(jm,93),jm=1,jpmois)/12*2440./
      ! 94-Purari (N. Guinea) 7S25 145E05                   R4
      ! Old=77 km3/year=2440m3/s; UNESCO(77+83,p595)=2727m3/s
      ! --> 2727.33325m3/s
      DATA inb(94)/1/
      DATA (iirnf(jc,94),jc=1,jpcoef)/ 146, 19*0 /
      DATA (ijrnf(jc,94),jc=1,jpcoef)/ 234, 19*0 /
      DATA (zrnfm(jm,94),jm=1,jpmois)/   &
          1972.,    3067.,    2332.,    2981.,    2693.,    2876.,   &
          2867.,    3477.,    2195.,    2967.,    2674.,    2627./
      ! 95-Choshui ch''i (taiwan) 24N03 120E23              R2
      ! Old=6 km3/year=190m3/s; UNESCO(65-68, p374)=120m3/s; ratio=1.58 
      ! --> 0.m3/s
      DATA inb(95)/0/
      DATA (iirnf(jc,95),jc=1,jpcoef)/  20*0 /
      DATA (ijrnf(jc,95),jc=1,jpcoef)/  20*0 /
      DATA (zrnfm(jm,95),jm=1,jpmois)/   &
           65.,      63.,      83.,     100.,     177.,     535.,   &
          332.,     313.,     236.,     193.,     101.,      84./
      ! 96-Kaoping (Taiwan)                                 R5  
      ! Old=9 km3/year=285m3/s
      ! --> 0.m3/s
      DATA inb(96)/0/
      DATA (iirnf(jc,96),jc=1,jpcoef)/ 20*0 /
      DATA (ijrnf(jc,96),jc=1,jpcoef)/ 20*0 /
      DATA (zrnfm(jm,96),jm=1,jpmois)/12*285./
      ! 97-Tsengwen (Taiwan)                                R5
      ! Old=2 km3/year=63m3/s
      ! --> 0.m3/s
      DATA inb(97)/0/
      DATA (iirnf(jc,97),jc=1,jpcoef)/ 20*0 /
      DATA (ijrnf(jc,97),jc=1,jpcoef)/ 20*0 /
      DATA (zrnfm(jm,97),jm=1,jpmois)/12*63./
      ! 98-Hualien (Taiwan)                                 R5
      ! Old=4 km3/year=127m3/s
      ! --> 0.m3/s
      DATA inb(98)/0/
      DATA (iirnf(jc,98),jc=1,jpcoef)/ 20*0 /
      DATA (ijrnf(jc,98),jc=1,jpcoef)/ 20*0 /
      DATA (zrnfm(jm,98),jm=1,jpmois)/12*127./
      ! 99-Peinan (Taiwan) 22N46 121E10                     R5
      ! Old=4 km3/year=127m3/s
      ! --> 127.000008m3/s
      DATA inb(99)/1/
      DATA (iirnf(jc,99),jc=1,jpcoef)/  98, 19*0 /
      DATA (ijrnf(jc,99),jc=1,jpcoef)/ 287, 19*0 /
      DATA (zrnfm(jm,99),jm=1,jpmois)/12*127./
      ! 100-Hsiukuluan (Taiwan)                             R5
      ! Old=4 km3/year=127m3/s
      ! --> 0.m3/s
      DATA inb(100)/0/
      DATA (iirnf(jc,100),jc=1,jpcoef)/ 20*0 /
      DATA (ijrnf(jc,100),jc=1,jpcoef)/ 20*0 /
      DATA (zrnfm(jm,100),jm=1,jpmois)/12*127./

      DATA inb(101)/0/
      DATA inb(102)/0/

      !  Total run-offs(VII)=6181.33301m3/s
      !  Total run-offs(I+II+III+IV+V+VI+VII)= 567084. m3/s
      !                                      = 1.588668056E-6 kg/m2/s
      !                                      = 17883.5586 km3/Year
      !                                      = 0.567083955 Sverdrup

      DATA (inb(jr),jr=103,jpriv)/18*0/
      
      IF( kt == nit000 ) THEN
         IF(lwp) WRITE(numout,*)
         IF(lwp) WRITE(numout,*) 'flxrnf : runoff + orca05'
         IF(lwp) WRITE(numout,*) '~~~~~~'
         IF(lwp) WRITE(numout,*) '   nrunoff = ', nrunoff
         IF(lwp) WRITE(numout,*)
      ENDIF

      ! 0. initialization and  indexes  modification for zoom version
      ! --------------------------------------------------------------
      
      
      ! conversion factor m3/s --> kg/m2/s *e1t*e2t

      zconv = rauw

      IF( kt == nit000 ) THEN 
         ! Set runoffs and upstream coeff to zero
         runoff (:,:) = 0.e0                                                                                  
         upsrnfh(:,:) = 0.e0
         upsrnfz(:)   = 0.e0
         upsadv (:,:) = 0.e0
         zcoefr(:,:,:) = 0.e0

         IF( nrunoff == 0 ) THEN
            IF(lwp) WRITE(numout,*)
            IF(lwp) WRITE(numout,*) ' NO RUNOFF in this simulation '
            IF(lwp) WRITE(numout,*)
         ENDIF
      ENDIF

      ! 1. initialization of the runoff array
      ! -------------------------------------

      IF( nrunoff == 1 .OR. nrunoff == 2) THEN

         iman  = jpmois
         
         i15 = nday / 16
         
         imois = nmonth + i15 - 1
         IF( imois == 0) imois = iman
         IF( nleapy == 1 .AND. MOD( nyear, 4 ) == 0 ) THEN
            ! Number of Day Between Data
            idbd = nbiss(imois)
         ELSEIF( nleapy > 1 ) THEN
            idbd = nleapy
         ELSE
            idbd = nobis(imois)
         END IF
         ! Number of days between imois, 15 and the end of month
         idmeom = idbd - 15
         
         ! 1.1 Calendar computation
         
         ! nrnf1 number of the first array record used in the simulation
         ! nrnf2 number of the last  array record
         
         nrnf1 = imois
         nrnf2 = nrnf1 + 1
         nrnf1 = MOD( nrnf1, iman )
         IF( nrnf1 == 0 ) nrnf1 = iman
         nrnf2 = MOD( nrnf2, iman )
         IF( nrnf2 == 0 ) nrnf2 = iman
         
         IF( kt == nit000 ) THEN
            IF(lwp) WRITE(numout,*)
            IF(lwp) WRITE(numout,*) 'flxrnf routine'
            IF(lwp) WRITE(numout,*) 'first array record used nrnf1 ',nrnf1
            IF(lwp) WRITE(numout,*) 'last  array record used nrnf2 ',nrnf2
         ENDIF

         zxy = FLOAT( nday + idmeom - idbd * i15 ) / idbd

         DO jr = 1, jpriv-1
            inbp = inb(jr)
            IF( inbp /= 0 ) THEN
               DO jl = 1, inbp
                  DO jj = mj0(ijrnf(jl,jr)), mj1(ijrnf(jl,jr))
                     DO ji = mi0(iirnf(jl,jr)), mi1(iirnf(jl,jr))
                        runoff(ji,jj) = runoff(ji,jj)   & 
                           &          + ( (1.-zxy) * zrnfm(nrnf1,jr)   &
                           &          +       zxy  * zrnfm(nrnf2,jr)  ) / FLOAT(inbp)
                     END DO
                  END DO
               END DO
            ENDIF
         END DO


         ! 2. conversion in mm/day
         ! -----------------------
         !     C a u t i o n : upward water flux, runoff is negative

         runoff(:,:) = -zconv * runoff(:,:) / ( e1t(:,:) * e2t(:,:) )
         

         ! 3. advectve coefficient
         ! -----------------------

         !  Creates the array coef that contains the coefficient to affect to
         !  the upstream scheme. advection scheme will be:
         !  coefr * upstream + (1- coefr) centered
         !  coefr must be between 0 and 1.
         !  3 values are used: maximum = zrup1, between zrup2, small zrup3.
         ! 
         IF( nrunoff == 2 .AND. kt == nit000 ) THEN

            zrup1 = 0.5
            zrup2 = 0.25
            zrup3 = 0.125
            DO jr = 1, jpriv-1
               inbp = inb(jr)
               IF( inbp /= 0) THEN
                  DO jl = 1, inbp
                     ! ji,jj
                     DO jj = mj0(ijrnf(jl,jr)), mj1(ijrnf(jl,jr))
                        DO ji = mi0(iirnf(jl,jr)), mi1(iirnf(jl,jr))
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = zrup1
                           END DO
                           zcoefr(ji,jj,4) = zrup2
                           zcoefr(ji,jj,5) = zrup3
                        END DO
                     END DO
                     ! --> zrup2 (originally = 0.5)
                     ! ji,jj+1
                     DO jj = mj0(ijrnf(jl,jr) + 1), mj1(ijrnf(jl,jr) + 1)
                        DO ji = mi0(iirnf(jl,jr)), mi1(iirnf(jl,jr))
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji,jj-1
                     DO jj = mj0(ijrnf(jl,jr) - 1), mj1(ijrnf(jl,jr) - 1)
                        DO ji = mi0(iirnf(jl,jr)), mi1(iirnf(jl,jr))
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji+1,jj-1
                     DO jj = mj0(ijrnf(jl,jr) - 1), mj1(ijrnf(jl,jr) - 1)
                        DO ji = mi0(iirnf(jl,jr) + 1), mi1(iirnf(jl,jr) + 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji+1,jj
                     DO jj = mj0(ijrnf(jl,jr)), mj1(ijrnf(jl,jr))
                        DO ji = mi0(iirnf(jl,jr) + 1), mi1(iirnf(jl,jr) + 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji+1,jj+1
                     DO jj = mj0(ijrnf(jl,jr) + 1), mj1(ijrnf(jl,jr) + 1)
                        DO ji = mi0(iirnf(jl,jr) + 1), mi1(iirnf(jl,jr) + 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji-1,jj+1
                     DO jj = mj0(ijrnf(jl,jr) + 1), mj1(ijrnf(jl,jr) + 1)
                        DO ji = mi0(iirnf(jl,jr) - 1), mi1(iirnf(jl,jr) - 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji-1,jj
                     DO jj = mj0(ijrnf(jl,jr)), mj1(ijrnf(jl,jr))
                        DO ji = mi0(iirnf(jl,jr) - 1), mi1(iirnf(jl,jr) - 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! ji-1,jj-1
                     DO jj = mj0(ijrnf(jl,jr) - 1), mj1(ijrnf(jl,jr) - 1)
                        DO ji = mi0(iirnf(jl,jr) - 1), mi1(iirnf(jl,jr) - 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup2, zcoefr(ji,jj,jn) )
                           END DO
                           zcoefr(ji,jj,4) = MAX( zrup3, zcoefr(ji,jj,4) )
                        END DO
                     END DO
                     ! --> zrup3 (originally = 0.25)
                     ! ji-1,jj+2
                     DO jj = mj0(ijrnf(jl,jr) + 2), mj1(ijrnf(jl,jr) + 2)
                        DO ji = mi0(iirnf(jl,jr) - 1), mi1(iirnf(jl,jr) - 1)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji-1,jj-2
                     DO jj = mj0(ijrnf(jl,jr) - 2), mj1(ijrnf(jl,jr) - 2)
                        DO ji = mi0(iirnf(jl,jr) - 1), mi1(iirnf(jl,jr) - 1)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji,jj-2
                     DO jj = mj0(ijrnf(jl,jr) - 2), mj1(ijrnf(jl,jr) - 2)
                        DO ji = mi0(iirnf(jl,jr)    ), mi1(iirnf(jl,jr)    )
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji,jj+2
                     DO jj = mj0(ijrnf(jl,jr) + 2), mj1(ijrnf(jl,jr) + 2)
                        DO ji = mi0(iirnf(jl,jr)    ), mi1(iirnf(jl,jr)    )
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+1,jj-2
                     DO jj = mj0(ijrnf(jl,jr) - 2), mj1(ijrnf(jl,jr) - 2)
                        DO ji = mi0(iirnf(jl,jr) + 1), mi1(iirnf(jl,jr) + 1)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+1,jj+2
                     DO jj = mj0(ijrnf(jl,jr) + 2), mj1(ijrnf(jl,jr) + 2)
                        DO ji = mi0(iirnf(jl,jr) + 1), mi1(iirnf(jl,jr) + 1)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+2,jj-2
                     DO jj = mj0(ijrnf(jl,jr) - 2), mj1(ijrnf(jl,jr) - 2)
                        DO ji = mi0(iirnf(jl,jr) + 2), mi1(iirnf(jl,jr) + 2)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+2,jj+2
                     DO jj = mj0(ijrnf(jl,jr) + 2), mj1(ijrnf(jl,jr) + 2)
                        DO ji = mi0(iirnf(jl,jr) + 1), mi1(iirnf(jl,jr) + 1)
                           DO jn = 1, 3  
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+2,jj-1
                     DO jj = mj0(ijrnf(jl,jr) - 1), mj1(ijrnf(jl,jr) - 1)
                        DO ji = mi0(iirnf(jl,jr) + 2), mi1(iirnf(jl,jr) + 2)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+2,jj+1
                     DO jj = mj0(ijrnf(jl,jr) + 1), mj1(ijrnf(jl,jr) + 1)
                        DO ji = mi0(iirnf(jl,jr) + 2), mi1(iirnf(jl,jr) + 2)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji+2,jj
                     DO jj = mj0(ijrnf(jl,jr)    ), mj1(ijrnf(jl,jr)    )
                        DO ji = mi0(iirnf(jl,jr) + 2), mi1(iirnf(jl,jr) + 2)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji-2,jj
                     DO jj = mj0(ijrnf(jl,jr)    ), mj1(ijrnf(jl,jr)    )
                        DO ji = mi0(iirnf(jl,jr) - 2), mi1(iirnf(jl,jr) - 2)
                           DO jn = 1, 3        
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji-2,jj-2
                     DO jj = mj0(ijrnf(jl,jr) - 2), mj1(ijrnf(jl,jr) - 2)
                        DO ji = mi0(iirnf(jl,jr) - 2), mi1(iirnf(jl,jr) - 2)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji-2,jj+2
                     DO jj = mj0(ijrnf(jl,jr) + 2), mj1(ijrnf(jl,jr) + 2)
                        DO ji = mi0(iirnf(jl,jr) - 2), mi1(iirnf(jl,jr) - 2)
                           DO jn = 1, 3
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji-2,jj-1
                     DO jj = mj0(ijrnf(jl,jr) - 1), mj1(ijrnf(jl,jr) - 1)
                        DO ji = mi0(iirnf(jl,jr) - 2), mi1(iirnf(jl,jr) - 2)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                     ! ji-2,jj+1
                     DO jj = mj0(ijrnf(jl,jr) + 1), mj1(ijrnf(jl,jr) + 1)
                        DO ji = mi0(iirnf(jl,jr) - 2), mi1(iirnf(jl,jr) - 2)
                           DO jn = 1, 3 
                              zcoefr(ji,jj,jn) = MAX( zrup3, zcoefr(ji,jj,jn) )
                           END DO
                        END DO
                     END DO
                  END DO
               ENDIF
            END DO
            upsrnfh(:,:) = zcoefr(:,:,1)
            upsrnfz(:)   = 0.e0
            upsrnfz(1)   = zrup1
            upsrnfz(2)   = zrup1
            upsrnfz(3)   = zrup1
            upsrnfz(4)   = zrup2
            upsrnfz(5)   = zrup3
         ENDIF
      ENDIF
    
#endif

   END SUBROUTINE flx_rnf
