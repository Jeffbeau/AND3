#-Q- sxnec ##################
#-Q- sxnec ## SXNEC IDRIS
#-Q- sxnec ##################
#-Q- sxnec #@$-r :XXX:XXX:XXX:           # job name
#-Q- sxnec #@$-o output_XXXXXXX.1        # outputfile name
#-Q- sxnec #@$-me                        # sends a mail at the end of execution
#-Q- sxnec #@$-eo                        # merge standard error and output
#-Q- sxnec #@$-jo                        # print a short performance analysis
#-Q- sxnec #@$-lT 1:00:00                # Max total CPU time
#-Q- sxnec #@$-lt 0:59:00                # Max CPU time per process
#-Q- sxnec #@$-lM 2Gb                    # Max memory
#-Q- sxnec ##@$-c 4                     # Max number of simultaneous procs used (here=4)
#-Q- sxnec ##@$-q multi                 # Use more than 1 proc
#-Q- aix ##################
#-Q- aix ## IBM   IDRIS  ##
#-Q- aix ##################
#-Q- aix #@job_name= :XXX:XXX:XXX:          
#-Q- aix #@output= output_XXXXXXX.1          
#-Q- aix #@error= error_XXXXXXX.1          
#-Q- aix #@cpu_limit= 5000
#-Q- aix #@stack_limit= 200Mb        
#-Q- aix #@data_limit= 1.8Gb         
#-Q- aix #@notification= complete
#-Q- aix #@total_tasks= 1 
#-Q- aix #@job_type= parallel
#-Q- aix #@queue
#-Q- sx6nec ##################
#-Q- sx6nec ## SX6NEC   CEA ##
#-Q- sx6nec ##################
#-Q- sx6nec #PBS -N :XXX:XXX:XXX:        # job name
#-Q- sx6nec #PBS -o output_XXXXXXX.1     # outputfile name
#-Q- sx6nec #PBS -j o                    # merge standard error and output
#-Q- sx6nec #PBS -S /usr/bin/ksh         # user shell
#-Q- sx6nec #PBS -l memsz_job=3.6gb      # Max memory
#-Q- sx6nec #PBS -l cputim_job=1:01:00   # Max CPU time
#-Q- sx6nec #PBS -q prod
#-Q- sx6nec ##PBS -l cpunum_prc=4
#-Q- sx6nec ##PBS -q parallel
########################################################################
##
##      Script to run a short experiment when installing the
##      ORCA2_LIM configuration 
##
##            Rachid Benshila, OPA System Team
##
##
#########################################################################
##-- print echo of commands before and after shell interpretation
date
set -vx

#################################
# Beginning of user modification
#################################

##-- define some directories : 
#- Input file storing 
#-Q- sxnec R_FORCING="gaya:/u/rech/eee/reee512/NEMO"
#-Q- aix R_FORCING="gaya:/u/rech/eee/reee512/NEMO"
#-Q- sx6nec R_FORCING="/dmnfs/p86bensh/NEMO"
#- Launching run repository
#-Q- sxnec R_EXPER=${QSUB_WORKDIR:-${PWD}}
#-Q- aix R_EXPER=${QSUB_WORKDIR:-${PWD}}
#-Q- sx6nec R_EXPER=${PWD}
#- modipsl repository
R_EXEDIR=MMMMMMM     
#- output files storing 
R_SORTIE_OCE=AAAAAAA/ORCA2_LIM
#- execution repository
R_TMP=$TMPDIR         

##-- define processus number : to change when running in mpp
NB_PROC=1

#################################
# End of user modification
#################################

#--  define a fonction to get the input tarfile
#-Q- sxnec Rapatrie () { [ -f $1/$2 ] || ( rcp ${R_FORCING}/$2 $1 ; cd $1; tar xvf $2 ;) }
#-Q- aix Rapatrie () { [ -f $1/$2 ] || ( rcp ${R_FORCING}/$2 $1 ; cd $1; tar xvf $2 ;) }
#-Q- sx6nec Rapatrie () { [ -f $1/$2 ] || ( cp ${R_FORCING}/$2 $1 ; cd $1; tar xvf $2 ;) }

[ -d ${R_TMP} ] || mkdir ${R_TMP}
cd ${R_TMP}

#--  get the executable
#-Q- sxnec rcp ${LOGNAME}@rhodes:${R_EXEDIR}/bin/opa opa.xx
#-Q- aix cp ${R_EXEDIR}/bin/opa opa.xx
#-Q- sx6nec cp ${R_EXEDIR}/bin/opa opa.xx
chmod 777 opa.xx

## --  Copy ancillary files
#
#- Namelist for ocean and ice
cp ${R_EXPER}/namelist_ice namelist_ice 
cp ${R_EXPER}/namelist namelist

#- Namelist for ocean and ice (agrif fine grid)
cp ${R_EXPER}/1_namelist_ice 1_namelist_ice 
cp ${R_EXPER}/1_namelist 1_namelist
cp ${R_EXPER}/AGRIF_FixedGrids.in AGRIF_FixedGrids.in

#- Files for the configuration and ocean dynamics
Rapatrie ${R_TMP} ORCA2_LIM.tar

#- Create links to be use in mpp on the number of processes
typeset -Z4 i=0
while [ $i -lt $NB_PROC ]
do
ln coordinates.nc coordinates_${i}.nc
ln geothermal_heating.nc geothermal_heating_${i}.nc
ln 1_coordinates.nc 1_coordinates_${i}.nc
ln 1_geothermal_heating.nc 1_geothermal_heating_${i}.nc
let i=$i+1
done
ls -alF

#-Q- sxnec export F_PROGINF=yes
#-Q- sxnec export F_ERRCNT=5
#-Q- sx6nec export F_PROGINF=yes
#-Q- sx6nec export F_ERRCNT=5

#-Q- sxnec #- To be use for a mpp run
#-Q- sxnec #mpirun -np ${NB_PROC} ./opa.xx
#-Q- sx6nec #- To be use for a mpp run
#-Q- sxn6ec #mpirun -np ${NB_PROC} ./opa.xx

./opa.xx

## -- Save output files
ls -alF
#- to copy on a storage machine
#-Q- sxnec DPUT=mfput
#-Q- aix DPUT=mfput
#-Q- sx6nec DPUT=putfer 
#-Q- sx6nec [ -d ${R_SORTIE_OCE} ] || mkdir -p ${R_SORTIE_OCE}

#- Save ocean output files
$DPUT *ocean.output ${R_SORTIE_OCE}/.
$DPUT *solver.stat ${R_SORTIE_OCE}/.
[ -f *mpp.output* ] && $DPUT *mpp.output* ${R_SORTIE_OCE}/.
for file_netcdf in *_grid_*.nc
do
$DPUT ${file_netcdf} ${R_SORTIE_OCE}/${file_netcdf}
done
#
#- Save ice output files
for file_netcdf in *icemod*
do
$DPUT ${file_netcdf} ${R_SORTIE_OCE}/${file_netcdf} 
done
$DPUT ice.evolu ${R_SORTIE_OCE}/ice.evolu 
#
#- Save restart files
for restart in *restart*
do
$DPUT ${restart} ${R_SORTIE_OCE}/${restart} 
done
#
#- Save ftrace file
[ -f ftrace.out* ] && $DPUT ftrace.out* ${R_SORTIE_OCE}/.
